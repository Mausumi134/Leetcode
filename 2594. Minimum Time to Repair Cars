class Solution {
public:
    typedef long long ll;
    bool possible(vector<int>& ranks,int cars,ll mid){
        ll count=0;

        for(int i=0;i<ranks.size();i++){
            count+=sqrt(mid/ranks[i]);
        }
        return count>=cars;
    }
    long long repairCars(vector<int>& ranks, int cars) {
        
        ll l=1;
        int maxi=*max_element(ranks.begin(),ranks.end());
        ll r=1LL*maxi*cars*cars;
        ll ans=-1;
        while(l<=r){
            ll mid=l+(r-l)/2;

            if(possible(ranks,cars,mid)){
                ans=mid;
                r=mid-1;
            }
            else{
                l=mid+1;
            }
        }
        return ans;
    }
};